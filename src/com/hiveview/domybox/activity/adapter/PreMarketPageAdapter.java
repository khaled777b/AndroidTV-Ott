package com.hiveview.domybox.activity.adapter;import java.util.ArrayList;import android.content.Context;import android.os.Handler;import android.os.Parcelable;import android.support.v4.view.PagerAdapter;import android.support.v4.view.ViewPager;import android.view.View;import android.view.ViewGroup;import com.hiveview.domybox.service.entity.AppMarketEntity;import com.hiveview.domybox.view.CommonAppView;public class PreMarketPageAdapter extends PagerAdapter{		public ArrayList<AppMarketEntity> appList;	private ArrayList<CommonAppView> mView= new ArrayList<CommonAppView>();	private Context mContext;	/**每页的数据*/	protected int PAGE_COUNT = 12;	private View mCurrentView;	private Handler mHandler;		public PreMarketPageAdapter(Context context,ArrayList<AppMarketEntity> appList, Handler mHandler) {		this.appList 	= appList;		this.mContext 	= context;		this.mHandler	= mHandler;	}			public void clearAllData(){		appList.clear();		this.notifyDataSetChanged();	}		public void AddMoreData(ArrayList<AppMarketEntity> aList) {		this.appList.addAll(aList);	}	@Override	public int getCount() {		int count = 0;		if (appList != null) {			if(appList.size()%PAGE_COUNT==0){				count =  appList.size() /PAGE_COUNT;			}else {				count = appList.size() /PAGE_COUNT + 1;			}		}		return count;	}	@Override	public Object instantiateItem(View view, int index) {//		View convertView = LayoutInflater.from(mContext).inflate(R.layout.test, null);		View convertView = null;				if(!appList.isEmpty()){			 			convertView = new CommonAppView(mContext, appList, index,  mHandler);			//			if(destroyView==null){//				convertView = new CommonAppView(mContext, appList, index);//			}else {//				//				destroyView.clearData();//				//				//设置加载图片未完成//				destroyView.cancelLoadDone();//				//				destroyView.resumeSetImage();//				destroyView.initData(appList, index);//				convertView=destroyView;//				destroyView=null;//			}						((ViewPager) view).addView(convertView, 0);		}		return convertView;	}		public CommonAppView getcurrentView(int index ){		return mView.get(index);	}		@Override	public void destroyItem(View view, int position, Object arg2) {		((ViewPager) view).removeView((View) arg2);	}//	最后的更新将会发出调用finishUpdate(ViewGroup)。	@Override	public void finishUpdate(View arg0) {	}	@Override	public boolean isViewFromObject(View view, Object obj) {		return (view == obj);	}	@Override	public void restoreState(Parcelable arg0, ClassLoader arg1) {	}	@Override	public Parcelable saveState() {		return null;	}	@Override	public void startUpdate(View arg0) {	}	@Override	public int getItemPosition(Object object) {		return POSITION_NONE;	}	@Override	public void setPrimaryItem(ViewGroup container, int position, Object object) {		mCurrentView = (View) object;	}		public View getPrimaryItem() {		return mCurrentView;	}	}