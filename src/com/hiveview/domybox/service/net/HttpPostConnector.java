package com.hiveview.domybox.service.net;import java.io.IOException;import java.io.InputStream;import java.io.UnsupportedEncodingException;import java.net.HttpURLConnection;import java.util.List;import org.apache.http.HttpResponse;import org.apache.http.client.methods.HttpPost;import org.apache.http.client.params.HttpClientParams;import org.apache.http.cookie.Cookie;import org.apache.http.impl.client.DefaultHttpClient;import org.apache.http.params.BasicHttpParams;import org.apache.http.params.HttpConnectionParams;import org.apache.http.params.HttpParams;import com.hiveview.domybox.common.PengDoctorApplication;import com.hiveview.domybox.service.exception.ServiceException;import com.hiveview.domybox.service.request.BasePostRequest;public class HttpPostConnector extends BaseHttpPostConnector{			private final int REPEATS = 3;	private final int CONNECT_TIMEOUT = 5000;	private final int READ_TIMEOUT = 10000;		private HttpPost httpPost;		@SuppressWarnings("unused")	private HttpPostConnector() {}	public HttpPostConnector(BasePostRequest request) throws UnsupportedEncodingException {				httpPost = request.executeToEntity();	}		/**	 * get data stream from net.	 * @author Arashmen	 * @throws HiveException .	 * */	public InputStream getPostResponse(){		DefaultHttpClient client = new DefaultHttpClient();		InputStream in = null;		int count = 0;		int responseCode = -1;		while(count<REPEATS){            try {            	        		HttpParams httpParams = new BasicHttpParams();//        		HttpConnectionParams.setConnectionTimeout(httpParams, CONNECT_TIMEOUT);        		HttpConnectionParams.setSoTimeout(httpParams, READ_TIMEOUT);        		HttpClientParams.setRedirecting(httpParams, true);        		httpPost.setParams(httpParams);            	HttpResponse response = client.execute(httpPost);				responseCode = response.getStatusLine().getStatusCode();                if (responseCode != HttpURLConnection.HTTP_OK)                    throw new RuntimeException();                                List<Cookie> cookies = client.getCookieStore().getCookies();                                PengDoctorApplication.saveCookie(cookies);                                in = response.getEntity().getContent();                if (null == in)                    throw new RuntimeException();                count = REPEATS;             } catch (IOException e) {					count++;			} catch (RuntimeException e) {					count++; 					try {						Thread.sleep(100);					} catch (InterruptedException e1) {						throw new ServiceException(e.getLocalizedMessage(), e);					}				} catch (Exception e){					throw new ServiceException(e.getLocalizedMessage(), e);				}		}				return in;	}		}