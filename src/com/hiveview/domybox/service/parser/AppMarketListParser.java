package com.hiveview.domybox.service.parser;import java.io.InputStream;import java.util.ArrayList;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import com.hiveview.domybox.service.entity.AppMarketEntity;import com.hiveview.domybox.service.exception.ServiceException;import com.hiveview.domybox.utils.StringUtils;public class AppMarketListParser extends BaseParser{	@Override	public ArrayList<AppMarketEntity> executeToObject(InputStream in)throws ServiceException{		ArrayList<AppMarketEntity> list = new ArrayList<AppMarketEntity>();		String jsonStr = StringUtils.converStreamToString(in);		AppMarketEntity entity ;				try {			JSONObject obj = new JSONObject(jsonStr);			//			JSONObject dataObj = obj.getJSONObject("data");			errorCode = obj.getString("code");						JSONObject resultObj = obj.getJSONObject("result");			JSONArray pageContent = resultObj.getJSONArray("pageContent");						int count = pageContent.length();			for(int i = 0 ; i < count ; i++){				JSONObject object = pageContent.getJSONObject(i);				entity = new AppMarketEntity();				entity.setBundlerId(object.getString("bundleId"));				entity.setAppName(object.getString("appName"));				entity.setAppIcon(object.getString("appIcon"));				entity.setTagName(object.getString("tagName"));				entity.setDeveloper(object.getString("developer"));				entity.setAppDesc(object.getString("appDesc"));								entity.setAppId(object.getInt("appId"));				entity.setSeq(object.getInt("seq"));				entity.setAppType(object.getInt("appType"));								JSONObject versionObj = object.getJSONObject("version");				entity.setVersionNo(versionObj.getString("versionNo"));				entity.setAppSize(versionObj.getString("appSize"));				entity.setVersionDesc(versionObj.getString("versionDesc"));				entity.setVersionUrl(versionObj.getString("versionUrl"));				entity.setCtime(versionObj.getLong("ctime"));								entity.setSize(versionObj.getString("size"));				entity.setMd5(versionObj.getString("md5"));								list.add(entity);			}					} catch (JSONException e) {			e.printStackTrace();			throw new ServiceException(10);		}				return list;	}			@Override	public String getErrorCode(){				return errorCode;			}}